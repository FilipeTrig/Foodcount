// <auto-generated />
using Foodcount.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Foodcount.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210416002238_ManyToManyAdded")]
    partial class ManyToManyAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Foodcount.Models.DishModel", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("displayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("Foodcount.Models.Dish_FoodModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DishId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FoodId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("FoodId");

                    b.ToTable("Food_Dishes");
                });

            modelBuilder.Entity("Foodcount.Models.FoodsModel", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Carbs")
                        .HasColumnType("int");

                    b.Property<int>("Fat")
                        .HasColumnType("int");

                    b.Property<int>("Kcal")
                        .HasColumnType("int");

                    b.Property<int>("Proteins")
                        .HasColumnType("int");

                    b.Property<int>("Sugars")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("displayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("oneUnitWeight")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("Foodcount.Models.Dish_FoodModel", b =>
                {
                    b.HasOne("Foodcount.Models.DishModel", "Dish")
                        .WithMany("dish_Food")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foodcount.Models.FoodsModel", "Foods")
                        .WithMany("dish_Food")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Foods");
                });

            modelBuilder.Entity("Foodcount.Models.DishModel", b =>
                {
                    b.Navigation("dish_Food");
                });

            modelBuilder.Entity("Foodcount.Models.FoodsModel", b =>
                {
                    b.Navigation("dish_Food");
                });
#pragma warning restore 612, 618
        }
    }
}
